<launch>
  <arg name="dnamespace" />
  <!-- arg name="dnamespace" default="common" /-->

  <!-- Running the risk of reinventing the wheel, i am making another style of
  roslaunch to run ssh, mostly because I could not understand how machine works
  and if it needs the remote machine to have ROS installed or not. Also we are
  using our not so easy to understand reverse tunnel, which I considered was
  going to be a pain to set up. If someone ever reads this and knows the right
   way to fix it, please do so.   -->

  <!--include file="$(find imagesaver)/launch/ims_online.launch">
    <arg name="dnamespace" value="$(arg dnamespace)"/>
  </include -->

  <arg name="dtunnelport" default="19996"/>
  <arg name="ownsshport" default="22"/>
  <arg name="dlpath" value="$(find dockerlauncher)"/>
  <arg name="duser" default="fbklein"/>
  <arg name="userpass" default="---define own password here ---"/>
  <arg name="downuser" default="frederico"/>
  <arg name="ownuserpass" default="---define own password here ---"/>
  <arg name="dockerscriptname" default="openpose_images.sh"/>
  <node name="dockerContainer" pkg="dockerlauncher" type="dockerlauncher.sh" output="screen" args="$(arg dtunnelport) $(arg dlpath) $(arg duser) $(arg ownsshport) $(arg userpass) $(arg downuser) $(arg ownuserpass) $(arg dnamespace) $(arg dockerscriptname)">
  </node>

  <!--include file="$(find imagesaver)/launch/outimage.launch">
    <arg name="dnamespace" value="$(arg dnamespace)"/>
  </include-->

</launch>
